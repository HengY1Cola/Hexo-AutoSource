<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker日常究竟要怎么用</title>
      <link href="/article/86cd1cda.html"/>
      <url>/article/86cd1cda.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker日常究竟要怎么用">Docker日常究竟要怎么用</h2><p>最近在考C4认证，结果模拟卡在了Docker部署。我真的十分无语😓</p><p>我在Windows上面编辑的，踩了好多坑，耗了很多时间。</p><p>趁着下周考试前来写一下Docker在日常只能够究竟要怎么用：</p><div class="note green icon flat"><i class="note-icon fas fa-bullhorn"></i><p>本文首发于博客，观感更好 :)</p><p>我的Docker自学笔记 ：<a href="https://blog.csdn.net/weixin_51485807/article/details/122517156">CSDN博客，求个赞～</a></p></div><h2 id="你能收获什么">你能收获什么</h2><p>下面这4项，除了玩复杂网络的，基本够了。</p><p>我把从本地 = &gt; 云上 =&gt; 别的地方 都串通了</p><ul><li>DockerFile使用</li><li>Docker上传仓库</li><li>docker-compose的编写与部署</li><li>常用命令</li></ul><h2 id="更新">更新</h2><div class="note red icon flat"><i class="note-icon fas fa-bullhorn"></i><p>重新写了下DockerFile与docker-compose的文件<br>找到了相比较depends_on等待Mysql打通再链接的脚本<br>这个很好的解决了 <a class="btn-beautify " href="https://github.com/Eficode/wait-for"   title="点击查看"><i class="far fa-hand-point-right"></i><span>点击查看</span></a></p></div><h2 id="DockerFile使用">DockerFile使用</h2><p>这个是干嘛的？ 简单来说就是你在本地写好了文件，然后写个DockerFile来打造你的专属Docker容器</p><p>也就是<code>Centos</code>上造个<code>Ubuntu</code>的感觉。我拿我的一个项目案例来说下。</p><p>首先呢创建一个<code>Dockerfile</code>文件，对！名字都是死的，当然你用<code>-f</code>也是行的，但是我懒得搞路径</p><p>其次呢，类似于 <code>.gitignore</code>你也要搞个<code>.dockerignore</code>这样就“加速”了，具体原因谷歌下。</p><p>好了到现在为止：开始写DockerFile 然后 命令参数到处都是 <a href="https://jiajially.gitbooks.io/dockerguide/content/chapter_fastlearn/dockerfile_details.html">随便放个在这里</a></p><p>对了你在打包前记得<strong>开启docker服务</strong>哈～</p><p>下面是我的目录👇 目标是打包个Flask</p><img src="/img/mics/image-20220219231439092.webp" alt="这是我的目录" style="zoom:80%;" /><p>这里有几个天坑！</p><ol><li><code>COPY</code> 过去的话<strong>文件</strong>就会自己创建相同名字，<strong>文件夹</strong>的话必须写一遍</li><li><code>PYTHONPATH</code>必须指定，不然的话就会说找不到Python模块，贼麻烦</li><li><code>RUN</code>尽量写一起，少建立层数，减小内存</li><li><code>CMD</code>的写法也要注意⚠️，不然只会执行最后一个</li></ol><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.9</span>.<span class="number">5</span>-slim</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /pythonApp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> requirements.txt /pythonApp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> utils /pythonApp/utils</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> src /pythonApp/src</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> repo /pythonApp/repo</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> model /pythonApp/model</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> flaskApp /pythonApp/flaskApp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> __init__.py /pythonApp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> wait-for /</span></span><br><span class="line"><span class="keyword">ENV</span> FLASK_APP=/pythonApp/flaskApp/app.py</span><br><span class="line"><span class="keyword">ENV</span> PYTHONPATH /pythonApp</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install --upgrade pip &amp;&amp; \</span></span><br><span class="line"><span class="bash">    pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get -q update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get -qy install netcat</span></span><br></pre></td></tr></table></figure><hr><p>开始部署打造自己的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t csdn:v0.2 . <span class="comment"># &lt;名字&gt;:&lt;版本&gt; . &lt;= 注意这个点</span></span><br><span class="line"></span><br><span class="line">$ docker image ls <span class="comment"># 就能看到了 cfdac878807f 为csdn的</span></span><br><span class="line"></span><br><span class="line">$ docker container run -d -p 8080:8080 cfdac878807f <span class="comment"># 后台开启个container</span></span><br><span class="line"></span><br><span class="line">$ docker container <span class="built_in">exec</span> -it cfdac878807f sh <span class="comment"># 交互式进入容器</span></span><br></pre></td></tr></table></figure><h2 id="Docker上传仓库">Docker上传仓库</h2><p>你打造出了自己的容器，自己在本地用肯定不够，放到云上，别人也能用对吧～</p><p>首先到仓库里面创建仓库 <a href="https://hub.docker.com/repositories">https://hub.docker.com/repositories</a></p><img src="/img/mics/image-20220219233253507.webp" alt="创建效果" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker login <span class="comment"># 然后本地登陆下验证下你是你就好了</span></span><br><span class="line"></span><br><span class="line">$ docker tag cfdac878807f &lt;hub-user&gt;/&lt;repo-name&gt;[:&lt;tag&gt;] <span class="comment"># 给你将要上传的打上标签</span></span><br><span class="line"></span><br><span class="line">$ docker push &lt;hub-user&gt;/&lt;repo-name&gt;:&lt;tag&gt; <span class="comment"># 传到哪个仓库去 不写Tag就是最新的</span></span><br></pre></td></tr></table></figure><p>到这里只要有网就能部署你的。</p><h2 id="docker-compose的编写与部署">docker-compose的编写与部署</h2><p>这个<code>docker-compose</code>又是干嘛的？ 这个是你给别人的，别人有你这个</p><p>就能马上搭建出你想给他的环境。类似于sh脚本，很快就在另外机器上部署相同环境。</p><p>名字也是写死的 <code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7.31</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">small:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--character-set-server=utf8mb4</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hengyisky/daily:v0.1</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">small:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.4</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">mysql:mysql</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">-c</span> <span class="string">&#x27;/wait-for mysql:3306 -- python /pythonApp/src/app.py; python /pythonApp/flaskApp/run.py&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">small:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">     <span class="attr">config:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br></pre></td></tr></table></figure><p>这里就是吧 mysql 与自己的环境部署到一个子网里面，然后暴露端口直接用就行了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose pull <span class="comment"># 拉取需要的image</span></span><br><span class="line"></span><br><span class="line">$ docker-compose up -d --build <span class="comment"># 后台启动了直接用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于已经在运行的container，更改了本地的文件之后呢还是可以继续使用 docker-compose up -d --build</span></span><br></pre></td></tr></table></figure><h2 id="常用命令">常用命令</h2><p>除了上面的命令；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker container run -d -p 80:80 nginx <span class="comment"># 后台运行创建一个nginx容器</span></span><br><span class="line"></span><br><span class="line">$ docker run -it $(name) <span class="comment"># 执行容器中的默认脚本</span></span><br><span class="line"></span><br><span class="line">$ docker container <span class="built_in">exec</span> -it $(id) sh <span class="comment"># 交互式进入容器</span></span><br><span class="line"></span><br><span class="line">$ docker system prune -f <span class="comment"># 删除所有已经停止的容器</span></span><br><span class="line"></span><br><span class="line">$ docker image prune -a <span class="comment"># 删除所有没有使用的镜像</span></span><br></pre></td></tr></table></figure><p>其实吧：<code>Docker DeskTop</code>已经可以实现点点点了。  <a href="https://www.docker.com/products/docker-desktop">https://www.docker.com/products/docker-desktop</a></p><img src="/img/mics/image-20220219234504845.webp" alt="image-20220219234504845" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数字取证究竟怎么入门</title>
      <link href="/article/8679ce28.html"/>
      <url>/article/8679ce28.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：-4">前言：</h2><p>数字取证，基本都是<strong>安全方向</strong>的小伙伴关心的比赛。像<strong>长安杯,美亚杯</strong>等都比较出名的。</p><p>但是<strong>入门难</strong>是个问题，以及如何请教，如何学习都是一脸懵逼～</p><p>总结了下高校赛的参赛选手基本上是警察学院👮‍♀️，网安人员🦧，安全爱好者。</p><p>我在CSND上发布的<a href="https://blog.csdn.net/weixin_51485807/article/details/121088494">2021年长安杯观看视频复盘感想</a>，会<strong>经常有人私信我要检材资料</strong>。</p><p>我就想直接开个仓库，一口气学习搞定入门。</p><div class="note green icon flat"><i class="note-icon fas fa-bullhorn"></i><p>以上仓库均由@<strong>HengY1</strong> 个人维护，欢迎大家提出自己看法。</p><p>交流与补充的话直接开Pr/issue一起讨论。最后求个点赞/star✨</p></div><hr><h2 id="你能收获什么？">你能收获什么？</h2><p>现在都讲究的是快餐文化，我直接把该<strong>仓库的大体内容写出来</strong>，直接看有不有需要的。</p><p>具体详情<strong>点击按钮进行跳转到仓库里面查看</strong>。 <a class="btn-beautify " href="https://github.com/HengY1Sky/Where-Is-Evidence"   title="点击查看仓库及相关资料"><i class="far fa-hand-point-right"></i><span>点击查看仓库及相关资料</span></a></p><p>即通过本仓库，你可以获得：</p><ul><li><p>个人<strong>比赛经验</strong>分享</p></li><li><p><strong>检材</strong>分享，上手实战</p></li><li><p><strong>复盘</strong>视频收集与分享</p></li><li><p>官方/民间/个人<strong>WriteUp</strong></p></li><li><p>比赛我究竟要<strong>掌握什么</strong></p></li><li><p>究竟要用什么<strong>工具</strong>来做</p></li></ul><hr><h2 id="个人比赛经验分享">个人<strong>比赛经验</strong>分享</h2><p>我个人算是个典型例子，<strong>有巅峰有滑铁卢</strong>。</p><details>  <summary>请听我娓娓道来</summary><ol><li><p>先说下配置问题，首先你得准备个<code>1T</code>硬盘，保证基本的硬盘读写问题。电脑的运行内存最好到<code>16G</code>,不然你开个多个虚拟机就是弟中弟了。</p></li><li><p>在来说比赛前吧，首先赛前的话就是去做<strong>往年的题</strong>，也就是拿着Wp和检材去复盘。跟着别人的答案去找题的答案，然后总结怎么做就好了。然后我就被2020年的美亚杯给坑了，因为2021年的美亚杯换了很多形式，做的我乱了手脚，就感觉题不是题一样。再去多看看别人发的视频，视频带着做那多好的是吧，到这里基本上赛前花时间就知道个大概了。</p></li><li><p>比赛中，跟队友好好沟通，然后多读题，别急着提交，题多的话就先分好工。然后队友之间的实力差距不要太大，不然很容易脱节。然后千万别心态崩溃，千万别心态崩溃，千万别心态崩溃。先把自己擅长的会的做了。然后推荐的解题是：Linux/Mac/手机/USB/Windows。先保证会的然后Windows往后移动，这是为什么呢？因为你拿工具扫了Windows基本上扫了个寂寞，基本上要开虚拟机进去看，基本上你的电脑会很卡，懂吗？本身检材开的够多了，软件开的够多了，你再来个Windows虚拟机。哦豁～</p></li><li><p>赛后好好复盘，准备下一场比赛，及时收集最新消息。</p></li><li><p>2021年的长安杯是我第一次正式比赛，比赛的内容基本上都是我平时在用的框架呀什么的。做题就是嗖嗖的秒杀。但是2021年的美亚杯就是我的滑铁卢了。我要吐槽的地方太多了。首先他说什么要录像好嘛没啥问题，关键是要用个他给你的软件，这个软件会自动杀掉你的QQ，微信，钉钉啥的，然后比赛还不能看手机，关键的来了！它密码太长官方给你的解压密码是错的，然后官方也不说，等人反应，这下好了20分钟多分钟了，官方换了密码，结果还是错的，最后我是实在憋不住问了别人，没有通讯工具，然后密码太长我一个个敲上去了，到解压出资料，40分钟已经过去了… 然后开始是分析手机，我拿出火眼发现分析个寂寞，根本扫不到材料。结果整了半天进去发现内置了分析器，进去还全是英文，又整了半天终于换成了中文。到这里我是彻底不想打了，整个比赛结束，我连Linux的题都没摸到… 下午队友少了一个，没啥想法了。<s>（看来火眼</s><s>钱没给够啊）</s>。</p></li></ol></details><hr><h2 id="历年检材分享">历年检材分享</h2><blockquote><ol><li>Vc container的挂载密码是指你输入进去后，你的电脑就多了个指定的盘</li><li>多个压缩文件合并使用7z多选右键合并解压，输入密码就下来完整的</li></ol></blockquote><p>2021年美亚杯的解压密码统一为： <code>MeiyaCup2021</code></p><p>模拟练习搭配：<a href="https://forensics.xidian.edu.cn/">https://forensics.xidian.edu.cn/</a> 使用</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">链接</th><th style="text-align:center">提取码</th><th style="text-align:center">解压密码/挂载密码</th></tr></thead><tbody><tr><td style="text-align:center">2021年长安杯</td><td style="text-align:center"><a href="https://www.aliyundrive.com/s/bfkLNmRXs7i">https://www.aliyundrive.com/s/bfkLNmRXs7i</a></td><td style="text-align:center">无</td><td style="text-align:center"><a href="http://xn--2021CAB-changancup-k412af99rtsxh.com">2021第三届CAB-changancup.com</a></td></tr><tr><td style="text-align:center">2021年美亚杯个人赛</td><td style="text-align:center"><a href="https://pan.baidu.com/s/15kQsiW1h_Onjl3dxokNHzA">https://pan.baidu.com/s/15kQsiW1h_Onjl3dxokNHzA</a></td><td style="text-align:center">dv2g</td><td style="text-align:center">HfsCk]&lt;eUqc5Q{(DG$ugiGlt8ezGdaZ&gt;!pQC-H\5BAc^gBo/^qq)/i2lufiN@H&quot;Y</td></tr><tr><td style="text-align:center">2021年美亚杯团队赛</td><td style="text-align:center"><a href="https://pan.baidu.com/s/1Rj1r8jnMIiBfGXK-lyS7DQ">https://pan.baidu.com/s/1Rj1r8jnMIiBfGXK-lyS7DQ</a></td><td style="text-align:center">jii2</td><td style="text-align:center">uR%{)Y’Qz-n3oGU`ZJo@(1ntxp8U1+bW;JlZH^I4%0rxf;[N+eQ)Lolrw&amp;E%,4q1</td></tr></tbody></table><h2 id="复盘视频">复盘视频</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center">2021年长安杯完整复盘</td><td style="text-align:center"><a href="https://www.bilibili.com/video/BV1hP4y1b7Vj">https://www.bilibili.com/video/BV1hP4y1b7Vj</a></td></tr><tr><td style="text-align:center">2021年美亚杯穿插复盘</td><td style="text-align:center"><a href="https://mudu.tv/live/watch/general?id=lj71nj2l">https://mudu.tv/live/watch/general?id=lj71nj2l</a></td></tr></tbody></table><h2 id="WriteUp">WriteUp</h2><ul><li><strong>XDforensics-Wiki</strong> 上的真题WriteUp ：<a href="https://forensics.xidian.edu.cn/wiki/Zello&amp;Xeno/">https://forensics.xidian.edu.cn/wiki/Zello&amp;Xeno/</a></li></ul><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center">2021年美亚杯个人赛Write-up</td><td style="text-align:center"><a href="https://mp.weixin.qq.com/s/brTWF2bCTQb-2yH457-C_A">https://mp.weixin.qq.com/s/brTWF2bCTQb-2yH457-C_A</a></td></tr><tr><td style="text-align:center">2019年长安杯Write-up</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/2019%E9%95%BF%E5%AE%89%E6%9D%AFWp.md">Github仓库</a></td></tr><tr><td style="text-align:center">2020年长安杯Write-up</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/2020%E9%95%BF%E5%AE%89%E6%9D%AFWp.md">Github仓库</a></td></tr><tr><td style="text-align:center">2021年长安杯Write-up</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/2021%E5%B9%B4%E9%95%BF%E5%AE%89%E6%9D%AFWp.md">Github仓库</a></td></tr><tr><td style="text-align:center">2021年长安杯观看视频复盘感想</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/2021%E5%B9%B4%E9%95%BF%E5%AE%89%E6%9D%AF%E8%A7%82%E7%9C%8B%E8%A7%86%E9%A2%91%E5%A4%8D%E7%9B%98%E6%84%9F%E6%83%B3.md">Github仓库</a></td></tr><tr><td style="text-align:center">第七届“美亚杯”取证小程序解题复盘回顾第一期</td><td style="text-align:center"><a href="https://mp.weixin.qq.com/s/hLOeiD2fbSb8K63-q8t6Rw">https://mp.weixin.qq.com/s/hLOeiD2fbSb8K63-q8t6Rw</a></td></tr><tr><td style="text-align:center">第七届“美亚杯”解题复盘回顾第二期</td><td style="text-align:center"><a href="https://mp.weixin.qq.com/s/K1_OZdo9V0wRro1zwhAIIw">https://mp.weixin.qq.com/s/K1_OZdo9V0wRro1zwhAIIw</a></td></tr><tr><td style="text-align:center">第七届“美亚杯”解题复盘回顾第三期</td><td style="text-align:center"><a href="https://mp.weixin.qq.com/s/YFmHxmZydxejXLwU1oYewQ">https://mp.weixin.qq.com/s/YFmHxmZydxejXLwU1oYewQ</a></td></tr></tbody></table><h2 id="能力要求">能力要求</h2><p>老基础三件套： Mysql + Apache + Php</p><p>前端三件套： Html + CSS + Js</p><p>掌握：Python；Php；Java；JavaScript；Golong</p><p>*Linux操作熟练  *Mysql操作熟练</p><p>总的来说从 <strong>Linux基础/编程语言的基础</strong> =&gt; <strong>功能实现/框架掌握</strong></p><p>学的越多，你会发现你越是啥不是～</p><h2 id="必备工具">必备工具</h2><p><strong>分析软件你个人是下载不到的</strong>，叫老师联系对应公司的人</p><p>上交你们的学生证照片会<strong>发账号权限下来/密钥下来</strong></p><p>软件使用是有时间限制的，且用且珍惜</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">评价</th><th style="text-align:center">说明书</th></tr></thead><tbody><tr><td style="text-align:center">火眼分析</td><td style="text-align:center">分析手机是真的好用</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/%E7%81%AB%E7%9C%BC%E6%89%8B%E6%9C%BA%E5%8F%96%E8%AF%81%E8%AF%B4%E6%98%8E%E4%B9%A6.pdf">https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/火眼手机取证说明书.pdf</a></td></tr><tr><td style="text-align:center">火眼仿真</td><td style="text-align:center">虚拟机专用，绕密码啥的挺好用的</td><td style="text-align:center"><a href="https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/%E7%81%AB%E7%9C%BC%E4%BB%BF%E7%9C%9F%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%E4%B9%A6.pdf">https://github.com/HengY1Sky/Where-Is-Evidence/blob/main/火眼仿真使用说明书.pdf</a></td></tr><tr><td style="text-align:center">取证大师</td><td style="text-align:center">Window/Linux分析比火眼全，小工具多</td><td style="text-align:center">暂无</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Js逆向练习制造Token与Id</title>
      <link href="/article/6d98b2b4.html"/>
      <url>/article/6d98b2b4.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：">前言：</h2><p>闲来无聊，把《Pyhton3网络爬虫开发实战(第二版)》看完了Js逆向部分。</p><p>最后的实战部分感觉挺有挑战性的，正好崔佬也有详细的教程。</p><p>平时的逆向都是野路子，刚好快回学校了有时间。</p><p>那为什么不自己动手下呢？下面记录下过程，只会更加详细。</p><h2 id="观察页面：">观察页面：</h2><p>废话不多说，直接上靶场：<a href="https://spa6.scrape.center">https://spa6.scrape.center</a></p><p>我们的目标是：1.拿到列表页的请求Ajax的Token加密 2. 详情页的Id加密与Token</p><p><img src="/img/JsReverse/58413655a0d3b23bf06dc701444e3435.webp" alt=""></p><img src="/img/JsReverse/image-20220210220457469.webp" alt="" width=90% /><p>查看网页源码可以看到：很强烈的Vue打包出来的样子，即使用的使用<code>SPA</code>页面</p><img src="/img/JsReverse/image-20220210220720322.webp" alt="" width=90% /><p>观察Js也会发现，代码压缩，变量名字十六进制转换。</p><img src="/img/JsReverse/image-20220210220948065.webp" alt="" width=90% /><p>好了我们将任务进行拆分，先拿到列表页面的加密规则，即去请求列表的token怎么搞到的</p><h2 id="获取列表页面：">获取列表页面：</h2><p>使用Ajax断点，直接拿到即将提交请求那个地方，然后使用堆栈，一点点往回找，这是基本思路</p><p>根据上面可以看到请求路径是：<code>/api/movie/?limit=10&amp;offset=0&amp;token=...</code> 打上断点刷新页面</p><img src="/img/JsReverse/image-20220210221604905.webp" alt="" width=90% /><img src="/img/JsReverse/image-20220210221714743.webp" alt="" width=90% /><p>开始针对堆栈往回找：发现axios的get方法：参数都是跟上面请求的十分符合。</p><p>到这里我们可以看到<code>_0x263439 = Object(_0x2fa7bd['a'])(this['$store']['state']['url']['index']);</code>这个应该就是token</p><img src="/img/JsReverse/image-20220210222010258.webp" alt="" width=90% /><p>因为找到具体的了，取消xhr断电在169行打上断点。把鼠标移在上面可以发现</p><p><code>/api/movie</code>作为参数传入进去，前面是个函数，同样把鼠标移上去也可以看到</p><img src="/img/JsReverse/image-20220210222357464.webp" alt="" width=90% /><p>然后我们使用Watch监视看看对应的<code>_0x2fa7bd</code>：去找下面的函数</p><img src="/img/JsReverse/image-20220210222633965.webp" alt="" width=90% /><img src="/img/JsReverse/image-20220210222902673.webp" alt="" width=90% /><p>格式化后的对应的函数就是把参数传入进来生成Token的逻辑函数了：</p><img src="/img/JsReverse/image-20220210223045604.webp" alt="" width=90% /><p>单步调试：去看逻辑</p><img src="/img/JsReverse/image-20220210223400006.webp" alt="" width=90% /><img src="/img/JsReverse/image-20220210224351817.webp" alt="" width=90% /><p>*最后的逻辑就是：</p><p><strong>传入地址这里是：<code>/api/movie</code>与时间戳用逗号拼接后，使用SHA1进行加密后，再与时间戳拼接，再用Base64编码一次就是Token</strong></p><p>这句话有点长，谅解下QAQ，到这里就可以用Python模拟了</p><p>当然也可以使用自带的重写功能：方便看其中的某些变量</p><blockquote><p>步骤是：</p><ol><li>创建一个保存的文件夹</li><li>被格式化的文件是不能修改的但是可以复制出来</li><li>在编辑器里面修改好了然后在原文件里面全选然后替换</li><li>下次刷新会自动替换</li></ol></blockquote><img src="/img/JsReverse/image-20220210225656780.webp" alt="" width=90% /><h2 id="获取详情页加密">获取详情页加密</h2><p>正如最开始的时候会发现：跳转到详情页面的链接已经加密好了，而不是在请求时候进行加密：</p><img src="/img/JsReverse/image-20220210233557960.webp" alt="" width=90% /><p>看到请求的链接的Token的话：应该是跟着请求加密生成的。</p><p>所以可以看出来我们现在要拿到<code>/detail/xxx</code>是怎么来的以及Token怎么出现的。</p><p>同时可以盲猜一波Token的加密方式应该是一样的，即只是换了上面的参数。</p><p>现在我们开始分析：<strong>确定是在完成请求列表页后经过Js加密已经形成的</strong></p><img src="/img/JsReverse/image-20220210234105022.webp" alt="" width=90% /><p>这样打断点即加载好了开始调试。<strong>但是这里有个问题就是接下来不知道要走多久</strong><img src="/img/JsReverse/image-20220210234232496.webp" alt="" width=90% /></p><p>这个地方就是学到新东西的地方：因为token的样子应该是最后Base64编码过，而在前端Base64的库就那么几个</p><p>通常是<code>btao</code>或者是<code>crypto-js</code>等，则可以使用🪝钩子来截取到</p><blockquote><p>这个意思就是func = object[attr]先拿到，然后重写之后，调用回去执行</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">  &#x27;use strict&#x27;</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">hook</span>(<span class="params">object ,attr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> func = object[attr]</span><br><span class="line">    object[attr] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;hooked&quot;</span>, object, attr, <span class="built_in">arguments</span>)</span><br><span class="line">      <span class="keyword">var</span> ret = func.apply(object, <span class="built_in">arguments</span>)</span><br><span class="line">      <span class="keyword">debugger</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;res&quot;</span>, ret)</span><br><span class="line">      <span class="keyword">return</span> ret</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  hook(<span class="built_in">window</span>, <span class="string">&#x27;btoa&#x27;</span>)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>注入方式可以是：1. 控制台 2. 重写Js 3. 油猴脚本</p><p>因为打了断点，我们在控制台重写btoa方法，这样到了方法执行的时候就会到我们写入的里面去验证</p><p>这里有几个注意点：</p><ol><li>控制台输入后 可以调用<code>btoa('1')</code>进入临时文件中的debugger</li><li>因为是<code>SPA</code>页面所以直接请求第二页可以触发写入的btoa，<strong>刷新则不行</strong>！</li></ol><img src="/img/JsReverse/image-20220211000800269.webp" alt="" width=90% /><p>点击第二页，加密规则都是一样的。直接触发（这里我是第二页去点第一页）</p><img src="/img/JsReverse/image-20220211001051507.webp" alt="" width=90% /><p>往下找了一层发现已经出来了则继续往下找</p><img src="/img/JsReverse/image-20220211001220739.webp" alt="" width=90% /><p>发现了拼凑：一串不知道是啥的+一个啥</p><img src="/img/JsReverse/image-20220211001431465.webp" alt="" width=90% /><p>同时发现：<code>_0x11a046</code>是写死的</p><img src="/img/JsReverse/image-20220211001556051.webp" alt="" width=90% /><p>拼凑的那个数字继续往下找：发现就是拿到结果的ID</p><img src="/img/JsReverse/image-20220211001717040.webp" alt="" width=90% /><p>到这里详情页加密已经出来了。现在验证下token怎么来的，好的方式一模一样</p><img src="/img/JsReverse/image-20220211002248300.webp" alt="" width=90% /><h2 id="总结">总结</h2><ol><li>做Js逆向基础要懂要会</li><li>心要大，要敢猜，不然真的一下子跟正确答案擦肩而过</li><li>同时心要细，不同的写法同一种效果，不要放过觉得不可能的地方</li><li>Python实现的方式很多，自己多捣鼓下</li></ol>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>学习Python高级编程到asyncio并发实践</title>
      <link href="/article/4ba9700a.html"/>
      <url>/article/4ba9700a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：-3">前言：</h2><p>今天也顺利把<strong>Python3高级核心技术97讲</strong>看完了</p><p>课程链接我也贴一下：<a href="https://coding.imooc.com/class/chapter/200.html">https://coding.imooc.com/class/chapter/200.html</a></p><p>总体说下感受：<strong>很推荐吧，循序渐进学习，拓展了很多自己的不足</strong></p><p>正好我现在我看《Pyhton3网络爬虫开发实战(第二版)》也200页出头了</p><p>刚好来到了<strong>aiohttp的使用</strong>,这不正好？ 把崔佬的代码拿下来看看</p><p>那么接下来我简单讲解下自己的理解。图省事自己到最后的完成代码</p><blockquote><p>注明：大部分我都写上了注释，是一个很好的实践代码</p><p>如果哪里我没理解对，记得来拍醒我下，请赐教，欢迎与我交流</p></blockquote><h2 id="图解：">图解：</h2><blockquote><p>首先得理解什么是多线程，什么是协程？ 以及相关的术语</p><p>简单来说：多线程就是多个线程同时并行；协程就是单个线程开启多个分支</p><p>协程将CPU更大利用化，简单比方：你去请求网络 那么CPU就在这里瞎等</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/b482423210574f27c212e38af2fb4de3.png" alt="Untitled-2022-02-04-1909"></p><h2 id="注意点">注意点</h2><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>为什么将session设置在__init__中</p></div><p>免得一断一连。</p><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>gather与wait区别</p></div><p>简单理解gather的功能更高级，可以拿到结果。想了解更多直接谷歌QAQ</p><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>loop 的作用</p></div><p>可以看作这个程序的心跳，不停的循环。推荐看看我上面推荐的课程<br>从12章到13章，从最开始的源码程序实现到后面封装调用库<br>循序渐进讲的不错，还可以学学yield怎么回事</p><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>使用asyncio.sleep而不是用time.sleep 使用motor异步库而不是用平时的</p></div><p>使用time.sleep不是不行，会报错但可以拿到，具体的原因建议看看第12，13章</p><h2 id="完整代码">完整代码</h2><blockquote><p>原本的代码在 <a href="https://github.com/Python3WebSpider/ScrapeSpa5">https://github.com/Python3WebSpider/ScrapeSpa5</a></p><p>我简单改了改小部分，学习的目的达到即可～</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用aiohttp异步爬去</span></span><br><span class="line"><span class="comment"># 目标网站：https://spa5.scrape.center/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> aiohttp <span class="keyword">import</span> ContentTypeError</span><br><span class="line"><span class="keyword">from</span> motor.motor_asyncio <span class="keyword">import</span> AsyncIOMotorClient</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置通用参数</span></span><br><span class="line">PAGE_SIZE = <span class="number">18</span>  <span class="comment"># 请求个数</span></span><br><span class="line">PAGE_NUMBER = <span class="number">1</span>  <span class="comment"># 请求页数</span></span><br><span class="line">CONCURRENCY = <span class="number">5</span>  <span class="comment"># 并发数量</span></span><br><span class="line"><span class="comment"># 设置日志格式</span></span><br><span class="line">logging.basicConfig(filename=<span class="string">&#x27;log.log&#x27;</span>, level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(levelname)s: %(message)s&#x27;</span>)</span><br><span class="line"><span class="comment"># 配置mongodb文件</span></span><br><span class="line">MONGO_CONNECTION_STRING = <span class="string">&#x27;mongodb://localhost:27017&#x27;</span></span><br><span class="line">MONGO_DB_NAME = <span class="string">&#x27;books&#x27;</span></span><br><span class="line">MONGO_COLLECTION_NAME = <span class="string">&#x27;books&#x27;</span></span><br><span class="line"><span class="comment"># 使用motor异步库</span></span><br><span class="line">client = AsyncIOMotorClient(MONGO_CONNECTION_STRING)</span><br><span class="line">db = client[MONGO_DB_NAME]</span><br><span class="line">collection = db[MONGO_CONNECTION_STRING]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.semaphore = asyncio.Semaphore(CONCURRENCY)  <span class="comment"># 设置并发数量</span></span><br><span class="line">        self.session = aiohttp.ClientSession()  <span class="comment"># 设置session() 免得</span></span><br><span class="line">        self.ids = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">scrapeApi</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> self.semaphore:  <span class="comment"># 限制并发</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                logging.info(<span class="string">&#x27;scraping %s&#x27;</span>, url)</span><br><span class="line">                <span class="keyword">async</span> <span class="keyword">with</span> self.session.get(url) <span class="keyword">as</span> response:  <span class="comment"># 使用 async with 上下文会自动关闭</span></span><br><span class="line">                    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)  <span class="comment"># 必须使用asyncio.sleep而不是time.sleep</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">await</span> response.json()  <span class="comment"># 为什么要使用await在pycharm中点进入发现是async申明的</span></span><br><span class="line">            <span class="keyword">except</span> ContentTypeError <span class="keyword">as</span> e:</span><br><span class="line">                logging.error(<span class="string">&#x27;error occurred while scraping %s&#x27;</span>, url, exc_info=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">scrapeIndex</span>(<span class="params">self, page</span>):</span></span><br><span class="line">        <span class="comment"># todo 拼凑出来对应的url 然后教给下一个协程</span></span><br><span class="line">        url = <span class="string">&#x27;https://spa5.scrape.center/api/book/?limit=18&amp;offset=&#123;offset&#125;&#x27;</span></span><br><span class="line">        url = url.<span class="built_in">format</span>(offset=PAGE_SIZE * (page - <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> self.scrapeApi(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">scrapeDetail</span>(<span class="params">self, <span class="built_in">id</span></span>):</span></span><br><span class="line">        url = <span class="string">&#x27;https://spa5.scrape.center/api/book/&#123;id&#125;&#x27;</span></span><br><span class="line">        url = url.<span class="built_in">format</span>(<span class="built_in">id</span>=<span class="built_in">id</span>)</span><br><span class="line">        data = <span class="keyword">await</span> self.scrapeApi(url)  <span class="comment"># 拿到结果就存入</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;id: <span class="subst">&#123;<span class="built_in">id</span>&#125;</span> : data: <span class="subst">&#123;data&#125;</span>&quot;</span>)  <span class="comment"># 具体内容自己操作写就好了(注意不是网络IO了不用await)</span></span><br><span class="line">        <span class="comment"># await self.saveData(data)  # 我是懒得去开个mongoQAQ</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">saveData</span>(<span class="params">data</span>):</span></span><br><span class="line">        logging.info(<span class="string">&#x27;saving data %s&#x27;</span>, data)</span><br><span class="line">        <span class="keyword">if</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> collection.update_one(&#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: data.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&#x27;$set&#x27;</span>: data</span><br><span class="line">            &#125;, upsert=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># todo 设置任务</span></span><br><span class="line">        <span class="comment"># 从这一步的话可以拿到指定页数的列表</span></span><br><span class="line">        scrape_index_tasks = [asyncio.ensure_future(self.scrapeIndex(page)) <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, PAGE_NUMBER + <span class="number">1</span>)]</span><br><span class="line">        results = <span class="keyword">await</span> asyncio.gather(*scrape_index_tasks)  <span class="comment"># 使用gather而不是wait</span></span><br><span class="line">        <span class="comment"># todo 拿到每一页中的ids</span></span><br><span class="line">        <span class="comment"># 这一步就是从预览大概到每一页中获取详细信息</span></span><br><span class="line">        <span class="keyword">for</span> index_data <span class="keyword">in</span> results:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> index_data:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> index_data.get(<span class="string">&#x27;results&#x27;</span>):  <span class="comment"># 使用字典的get方法</span></span><br><span class="line">                self.ids.append(item.get(<span class="string">&#x27;id&#x27;</span>))</span><br><span class="line">        <span class="comment"># todo 根据拿到的id进入协程同步进行拿到想要的结果并存入</span></span><br><span class="line">        scrape_detail_tasks = [asyncio.ensure_future(self.scrapeDetail(each)) <span class="keyword">for</span> each <span class="keyword">in</span> self.ids]</span><br><span class="line">        <span class="keyword">await</span> asyncio.wait(scrape_detail_tasks)</span><br><span class="line">        <span class="comment"># todo 最后关闭session会话</span></span><br><span class="line">        <span class="keyword">await</span> self.session.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    spider = Spider()</span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(spider.main())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Pygame实现小球躲避</title>
      <link href="/article/72f74028.html"/>
      <url>/article/72f74028.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：-2">前言：</h2><p>这学期的Python课，要写代码是真的多…</p><p>课程实验一是一个五子棋，但是发了代码。</p><p>至于代码质量嘛～  我直接全部根据自己划分的结构改了</p><p>这里吐槽下 (真的发下来的代码 惨不忍睹 )</p><p>我改了快4个小时 后面功能不想加了…</p><p>这次是自己写嘛～ 那就写个想样的。</p><h2 id="结构划分">结构划分</h2><p>我分为了</p><ul><li>run  入口</li><li>setting  设置</li><li>main 主逻辑</li><li>utils 仓库</li></ul><p>其实我想的是：全部设置到页面上去，但是偷懒～ （期末要去弄绩点）</p><p>直接开始贴代码</p><h3 id="run-py"><a href="http://run.py">run.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> main <span class="keyword">import</span> main</span><br><span class="line"></span><br><span class="line">banner = <span class="string">&quot;&quot;&quot; ____        _ _ _____          </span></span><br><span class="line"><span class="string">| __ )  __ _| | | ____|___  ___ </span></span><br><span class="line"><span class="string">|  _ \ / _` | | |  _| / __|/ __|</span></span><br><span class="line"><span class="string">| |_) | (_| | | | |___\__ \ (__ </span></span><br><span class="line"><span class="string">|____/ \__,_|_|_|_____|___/\___|</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(banner)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Author: HengYi&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 简单：输入 1&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 普通：输入 2&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 困难：输入 3&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请选择难度：&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> num <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]:</span><br><span class="line">            main(num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无法处理～&quot;</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;无法处理～&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="setting-py"><a href="http://setting.py">setting.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WIDTH = <span class="number">900</span>  <span class="comment"># 宽</span></span><br><span class="line">HEIGHT = <span class="number">600</span>  <span class="comment"># 高</span></span><br><span class="line">SCORE = <span class="number">0</span>  <span class="comment"># 分数</span></span><br><span class="line">TIME = <span class="number">0</span>  <span class="comment"># 时间</span></span><br><span class="line">FIRST_STEP = <span class="number">10</span>  <span class="comment"># 到达第二关时间</span></span><br><span class="line">SECOND_STEP = <span class="number">20</span>  <span class="comment"># 到达第三关时间</span></span><br><span class="line">FPS = <span class="number">60</span>  <span class="comment"># 刷新率</span></span><br><span class="line">BG_COLOR = (<span class="number">255</span>, <span class="number">239</span>, <span class="number">213</span>)  <span class="comment"># 背景颜色</span></span><br></pre></td></tr></table></figure><h3 id="utils-py"><a href="http://utils.py">utils.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> setting <span class="keyword">import</span> FIRST_STEP, SECOND_STEP, BG_COLOR, WIDTH, HEIGHT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据难度生成对应的小球</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:35 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ballNum</span>(<span class="params">ladderNum, time</span>):</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>],</span><br><span class="line">        [<span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">        [<span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据小球个数设置防止误触时间</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:43 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">protectTime</span>(<span class="params">ballsNum</span>):</span></span><br><span class="line">    <span class="keyword">if</span> ballsNum <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据时间设置小球大小</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:58 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">howBigBallIs</span>(<span class="params">ladderNum, time</span>):</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [<span class="number">25</span>, <span class="number">20</span>, <span class="number">15</span>],</span><br><span class="line">        [<span class="number">24</span>, <span class="number">20</span>, <span class="number">16</span>],</span><br><span class="line">        [<span class="number">26</span>, <span class="number">20</span>, <span class="number">16</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据时间难度计算球体的大小和速度</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 9:15 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judgeDiff</span>(<span class="params">ladderNum, time</span>):</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">3.5</span>, <span class="number">3.5</span>), (<span class="number">28</span>, <span class="number">28</span>, <span class="number">6</span>, <span class="number">6</span>), (<span class="number">26</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">9</span>)],</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">4.5</span>, <span class="number">4.5</span>), (<span class="number">27</span>, <span class="number">27</span>, <span class="number">8</span>, <span class="number">8</span>), (<span class="number">25</span>, <span class="number">25</span>, <span class="number">10</span>, <span class="number">10</span>)],</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">5</span>, <span class="number">5</span>), (<span class="number">26</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">9</span>), (<span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">12</span>)]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 创建平台窗口</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 2:58 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeGameBg</span>(<span class="params">width, height</span>):</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    screen = pygame.display.set_mode((width, height))  <span class="comment"># 设置窗口大小</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;小球逃逃逃&#x27;</span>)  <span class="comment"># 设置窗口标题</span></span><br><span class="line">    background = pygame.Surface(screen.get_size())  <span class="comment"># 填充背景</span></span><br><span class="line">    <span class="keyword">return</span> screen, background</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 添加小球产生的事件</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 3:06 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ballCome</span>():</span></span><br><span class="line">    COME_AGAIN = pygame.USEREVENT</span><br><span class="line">    pygame.time.set_timer(COME_AGAIN, <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> COME_AGAIN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 提示字体</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 3:11 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeTips</span>(<span class="params">content, size, color, position, screen</span>):</span></span><br><span class="line">    font = pygame.font.SysFont(<span class="string">&#x27;arial&#x27;</span>, size)</span><br><span class="line">    text_sf = font.render(content, <span class="literal">True</span>, color, BG_COLOR)</span><br><span class="line">    screen.blit(text_sf, position)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 字体展示</span></span><br><span class="line"><span class="comment"># Time: 2021/12/18 4:20 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span>(<span class="params">screen, SCORE, TIME</span>):</span></span><br><span class="line">    screen.fill(BG_COLOR)  <span class="comment"># 防止出现拖影</span></span><br><span class="line">    makeTips(<span class="string">&#x27;SCORE: &#x27;</span>, <span class="number">30</span>, (<span class="number">34</span>, <span class="number">139</span>, <span class="number">34</span>), (<span class="number">5</span>, <span class="number">40</span>), screen)</span><br><span class="line">    makeTips(<span class="string">&#x27;TIME(s): &#x27;</span>, <span class="number">30</span>, (<span class="number">64</span>, <span class="number">158</span>, <span class="number">255</span>), (<span class="number">5</span>, <span class="number">75</span>), screen)</span><br><span class="line">    makeTips(<span class="built_in">str</span>(<span class="built_in">int</span>(SCORE)), <span class="number">30</span>, (<span class="number">34</span>, <span class="number">139</span>, <span class="number">34</span>), (<span class="number">135</span>, <span class="number">40</span>), screen)</span><br><span class="line">    makeTips(<span class="built_in">str</span>(<span class="built_in">int</span>(TIME)), <span class="number">30</span>, (<span class="number">64</span>, <span class="number">158</span>, <span class="number">255</span>), (<span class="number">135</span>, <span class="number">75</span>), screen)</span><br><span class="line">    <span class="keyword">if</span> TIME <span class="keyword">in</span> [FIRST_STEP, FIRST_STEP + <span class="number">1</span>]:</span><br><span class="line">        makeTips(<span class="string">&#x27;Ops! LEVEL_2~&#x27;</span>, <span class="number">30</span>, (<span class="number">60</span>, <span class="number">179</span>, <span class="number">113</span>), (WIDTH / <span class="number">2</span> - <span class="number">30</span> * <span class="number">3.5</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>), screen)</span><br><span class="line">    <span class="keyword">elif</span> TIME <span class="keyword">in</span> [SECOND_STEP, SECOND_STEP + <span class="number">1</span>]:</span><br><span class="line">        makeTips(<span class="string">&#x27;Congratulations! LEVEL_3&#x27;</span>, <span class="number">25</span>, (<span class="number">60</span>, <span class="number">179</span>, <span class="number">113</span>), (WIDTH / <span class="number">2</span> - <span class="number">25</span> * <span class="number">6.25</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>), screen)</span><br></pre></td></tr></table></figure><h3 id="Main-py"><a href="http://Main.py">Main.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> setting <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ball</span>(<span class="params">pygame.sprite.Sprite</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *keys</span>):</span>  <span class="comment"># 创建球</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.timeSec = <span class="number">0</span></span><br><span class="line">        w, h, xs, ys = keys[<span class="number">0</span>]</span><br><span class="line">        self.w = w</span><br><span class="line">        self.h = h</span><br><span class="line">        self.xs = xs</span><br><span class="line">        self.ys = ys</span><br><span class="line">        x = random.randint(<span class="number">0</span>, WIDTH - self.w)</span><br><span class="line">        y = random.randint(<span class="number">0</span>, HEIGHT - self.h)</span><br><span class="line">        self.rect = pygame.Rect(x, y, self.w * <span class="number">2</span>, self.h * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, screen, *args</span>):</span></span><br><span class="line">        <span class="comment"># 根据设置的速度进行运动</span></span><br><span class="line">        self.rect.x += self.xs</span><br><span class="line">        self.rect.y += self.ys</span><br><span class="line">        <span class="comment"># 当遇到墙的时候进行反弹</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.x &gt; WIDTH - self.w <span class="keyword">or</span> self.rect.x &lt; <span class="number">0</span>:</span><br><span class="line">            self.xs = -self.xs</span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &gt; HEIGHT - self.h <span class="keyword">or</span> self.rect.y &lt; <span class="number">0</span>:</span><br><span class="line">            self.ys = -self.ys</span><br><span class="line">        <span class="keyword">if</span> self.timeSec &lt;= args[<span class="number">0</span>]:</span><br><span class="line">            pygame.draw.rect(screen, (<span class="number">100</span>, <span class="number">149</span>, <span class="number">237</span>), [self.rect.x, self.rect.y, self.rect.w, self.rect.h], <span class="number">2</span>)</span><br><span class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), [self.rect.center[<span class="number">0</span>], self.rect.center[<span class="number">1</span>]], self.w)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">timerAdd</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.timeSec += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.timeSec</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span>(<span class="params">self</span>):</span>  <span class="comment"># 销毁的时候</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse</span>(<span class="params">pygame.sprite.Sprite</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *keys</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.size = keys[<span class="number">0</span>]  <span class="comment"># 设置圆的大小</span></span><br><span class="line">        self.rect = pygame.Rect(WIDTH / <span class="number">2</span> - self.size, HEIGHT / <span class="number">2</span> - self.size, self.size * <span class="number">2</span>, self.size * <span class="number">2</span>)  <span class="comment"># 实则是一个正方形</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, screen, *args</span>):</span></span><br><span class="line">        <span class="keyword">if</span> pygame.mouse.get_focused():  <span class="comment"># 如果存在于页面内</span></span><br><span class="line">            self.rect.center = pygame.mouse.get_pos()</span><br><span class="line">        <span class="comment"># 限制球不能半身跑到边框上</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; <span class="number">0</span>:</span><br><span class="line">            self.rect.x = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> self.rect.x &gt; WIDTH - self.rect.w:</span><br><span class="line">            self.rect.x = WIDTH - self.rect.w</span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &lt; <span class="number">0</span>:</span><br><span class="line">            self.rect.y = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &gt; HEIGHT - self.rect.h:</span><br><span class="line">            self.rect.y = HEIGHT - self.rect.h</span><br><span class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), [self.rect.center[<span class="number">0</span>], self.rect.center[<span class="number">1</span>]], self.size)  <span class="comment"># 根据圆心画圆</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">ladderNum</span>):</span></span><br><span class="line">    <span class="comment"># -------------------画布初始化-----------------------</span></span><br><span class="line">    screen, background = makeGameBg(WIDTH, HEIGHT)</span><br><span class="line">    clock = pygame.time.Clock()</span><br><span class="line">    comeAgain = ballCome()</span><br><span class="line">    <span class="comment"># --------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># --------------------对象存储-------------------------</span></span><br><span class="line">    <span class="keyword">global</span> TIME, SCORE</span><br><span class="line">    balls = pygame.sprite.Group(Ball(judgeDiff(ladderNum, TIME)))</span><br><span class="line">    mouse = Mouse(howBigBallIs(ladderNum, TIME))</span><br><span class="line">    mouseObject = pygame.sprite.Group(mouse)</span><br><span class="line">    <span class="comment"># --------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------游戏主程序-----------------------</span></span><br><span class="line">    RUNNING = <span class="literal">True</span></span><br><span class="line">    SHOWINFO = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        draw(screen, SCORE, TIME)  <span class="comment"># 动态添加文字</span></span><br><span class="line">        <span class="keyword">if</span> SHOWINFO:</span><br><span class="line">            makeTips(<span class="string">&#x27;Please Press The Space To Restart&#x27;</span>, <span class="number">30</span>, (<span class="number">255</span>, <span class="number">99</span>, <span class="number">71</span>), (WIDTH / <span class="number">2</span> - <span class="number">240</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>),</span><br><span class="line">                     screen)</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> balls:</span><br><span class="line">            <span class="keyword">if</span> pygame.sprite.spritecollide(each, mouseObject, <span class="literal">False</span>, collided=<span class="literal">None</span>) <span class="keyword">and</span> each.timeSec &gt; <span class="number">2</span>:</span><br><span class="line">                RUNNING = <span class="literal">False</span></span><br><span class="line">                SHOWINFO = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                pygame.quit()</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYDOWN:  <span class="comment"># 重新开始</span></span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_SPACE:</span><br><span class="line">                    SCORE = <span class="number">0</span></span><br><span class="line">                    TIME = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> each <span class="keyword">in</span> balls.sprites():</span><br><span class="line">                        balls.remove(each)</span><br><span class="line">                    SHOWINFO = <span class="literal">False</span></span><br><span class="line">                    RUNNING = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == comeAgain <span class="keyword">and</span> RUNNING:  <span class="comment"># 每秒增加</span></span><br><span class="line">                TIME += <span class="number">1</span></span><br><span class="line">                ballsNum = ballNum(ladderNum, TIME)</span><br><span class="line">                diff = judgeDiff(ladderNum, TIME)</span><br><span class="line">                SCORE += (ballsNum * diff[<span class="number">3</span>])</span><br><span class="line">                <span class="keyword">if</span> TIME <span class="keyword">in</span> [<span class="number">10</span>, <span class="number">20</span>]:</span><br><span class="line">                    mouseObject.remove(mouseObject.sprites()[<span class="number">0</span>])</span><br><span class="line">                    mouseObject.add(Mouse(howBigBallIs(ladderNum, TIME)))</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(balls) &lt; ballsNum:</span><br><span class="line">                    balls.add(Ball(diff))</span><br><span class="line">                <span class="keyword">for</span> each <span class="keyword">in</span> balls:  <span class="comment"># 防止误触的保护罩</span></span><br><span class="line">                    each.timerAdd()</span><br><span class="line">        balls.update(screen, protectTime(ballNum(ladderNum, TIME)))</span><br><span class="line">        mouseObject.update(screen)</span><br><span class="line">        clock.tick(FPS)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;游戏结束&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="总结-2">总结</h2><h3 id="效果图：">效果图：</h3><img src="/img/ballResult.webp" alt="效果图" style="zoom:40%;" /><h3 id="如何食用：">如何食用：</h3><p>把上面4处代码Copy下来在用<code>run.py</code>启动</p><p>里面设计的 如何判断；如何重来；… (我觉得我的变量名字已经够清楚了🐶)</p><p>欢迎与我交流，讨论。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ClashX测速失败以及Mac终端走代理</title>
      <link href="/article/567e1422.html"/>
      <url>/article/567e1422.html</url>
      
        <content type="html"><![CDATA[<h2 id="ClashX测速失败以及Mac终端走代理">ClashX测速失败以及Mac终端走代理</h2><p>用机场也快一年半了，ClashX的话在Mac上很明显在终端上没有走代理</p><p>然后我写这篇在2021年份了，但是在<strong>CSDN上没法审核通过</strong>。</p><p>放到我博客上来科学上网，<strong>不然百度拿来看广告的</strong>？</p><div class="note green icon flat"><i class="note-icon fas fa-bullhorn"></i><p>注意：这是我的邀请链接（我可以收到 <strong>10%</strong> 的返利）</p><p>我一直在用，暂时没翻过车，然后推荐半年半年买，价格合理</p><p>我的链接： <a href="https://fastlink-aff.com/auth/register?code=HengY1Sky">https://fastlink-aff.com/auth/register?code=HengY1Sky</a></p></div><h2 id="下载Clashx">下载Clashx</h2><p>官方下载链接：<a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a></p><img src="/img/mics/20210309210610923.webp" alt="选择Clashx.dmg下载" style="zoom:80%;" /><h2 id="测速失败">测速失败</h2><p><strong>我的原因是：</strong><br>系统时间慢啦，<strong>是整整慢了一天</strong>！<br>说来搞笑，我测速不管怎样都是失败。<br>时分秒都显示正确，花了几个晚上去翻看帖子。<br>Github上的issue在小火箭和Clashx看到了凌晨<br>都没解决，突然看到时间慢了一天，当时真想哭又想笑</p><p><strong>还有个原因：</strong><br>ClashX内置dns不通引起的问题：<br>这功能是让网络更干净，但特殊时期dns不通了倒直接卡住了，此时请关闭该功能。<br><strong>方法如下：</strong><br>点击<strong>小猫咪〉配置〉打开本地配置文件夹</strong><br>用文本编辑器打开编辑 yaml配置文件<br>将 dns下的 <strong>enable</strong> 值改为 <strong>false</strong><br>修改保存后默认系统会弹出重载配置提示，点击重载</p><h2 id="终端走代理">终端走代理</h2><p>我是看了这位大佬的帖子<a href="https://blog.csdn.net/DSZhappy/article/details/108393159?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=clashxmac%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-108393159.pc_search_result_before_js">Clashx走终端</a><br>但他只说了结果，具体方法得自己摸索<br>其实现在弄多了之后，也很快找到了具体的解决方法。</p><p><strong>1.第一步</strong></p><p><code>vim .bash_profile</code></p><p><strong>2. 第二步：</strong></p><p><code>输入i-&gt;进入insert-&gt; 复制下面内容 -&gt;：wq!(强制写入退出)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function proxy_on() &#123;</span><br><span class="line">    export no_proxy=&quot;localhost,127.0.0.1,localaddress,.localdomain.com&quot;</span><br><span class="line">    export http_proxy=&quot;http://127.0.0.1:7890&quot;</span><br><span class="line">    export https_proxy=$http_proxy</span><br><span class="line">    #export all_proxy=socks5://127.0.0.1:7890 # or this line</span><br><span class="line">    echo -e &quot;已开启代理&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function proxy_off()&#123;</span><br><span class="line">    unset http_proxy</span><br><span class="line">    unset https_proxy</span><br><span class="line">    echo -e &quot;已关闭代理&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/img/mics/20210309212421139.webp" alt="效果图" style="zoom:80%;" /><p><strong>4. 第四步：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p><strong>5.第五步：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open -e .zshrc</span><br></pre></td></tr></table></figure><img src="/img/mics/20210309213339480.webp" alt="效果图" style="zoom:80%;" /><p><strong>6.第六步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure><p>恭喜你！到这步就可以啦！</p><p>重新打开终端 <code>proxy_on</code>就打开了 不管是Git啥的都快很多。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
